" Use spaces instead of tabs
set expandtab

" Be smart when using tabkey
set smarttab

" 1 tab == 4 spaces
set shiftwidth=4
set tabstop=4

" Enable filetype plugins
filetype plugin on
filetype indent on


set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines

set nu

" Set to auto read when a file is changed from the outside
set autoread

" Configure backspace so it acts as it should act
set backspace=eol,start,indent

" Show matching brackets when text indicator is over them
set showmatch 
" How many tenths of a second to blink when matching brackets
set mat=2

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500


" Enable syntax highlighting
syntax enable 

" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf8

" Use Unix as the standard file type
set ffs=unix,dos,mac

" Turn backup off, since most stuff is in SVN, git et.c anyway...
set nobackup
set nowb
set noswapfile

" Return to last edit position when opening files (You want this!)
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
" Remember info about open buffers on close
set viminfo^=%

filetype plugin indent on
syntax on

" restore the cursor position

function! ResCur()

  if line("'\"") <= line("$")

    normal! g`"

    return 1

  endif

endfunction



augroup resCur

  autocmd!

  autocmd BufWinEnter * call ResCur()

augroup END


func! CmtOn()    "주석 on

    exe "'<,'>norm i#"

endfunc

vmap <c-c> <esc>:call CmtOn() <cr>

nmap <c-c> <esc>v:call CmtOn() <cr>

map f w





"""""""""""""""""""""""""""""""'''
""""           VIM PLUGIN        
""""""""""""""""""""""""""""""""""
call plug#begin('~/.vim/plugged')

" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
Plug 'junegunn/vim-easy-align'

" Any valid git URL is allowed
"NERD-Tree
Plug 'preservim/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
map <F3> :NERDTreeToggle<cr>

" Initialize plugin system
"
"
Plug 'sillybun/vim-repl'

let g:repl_program = {
            \   'python': 'ipython',
            \   'python-debug': 'ipdb3',
            \   'vim': 'vim -e',
            \   }
let g:repl_predefine_python = {
            \   'numpy': 'import numpy as np',
            \   }
let g:repl_cursor_down = 1
let g:repl_python_automerge = 1
let g:repl_ipython_version = '7'
let g:repl_output_copy_to_register = "t"
nnoremap <leader>r :REPLToggle<Cr>
nnoremap <leader>e :REPLSendSession<Cr>
autocmd Filetype python nnoremap <F12> <Esc>:REPLDebugStopAtCurrentLine<Cr>
autocmd Filetype python nnoremap <F9> <Esc>:REPLPDBN<Cr>
autocmd Filetype python nnoremap <F10> <Esc>:REPLPDBS<Cr>
let g:repl_position = 3

"YouCompleteMe
Plug 'ycm-core/YouCompleteMe', { 'do': './install.py --clang-completer' }
highlight Pmenu ctermfg=190 ctermbg=17 guifg=#AACCFF guibg=#222233
highlight PmenuSel ctermfg=17 ctermbg=190 guifg=#AACCFF guibg=#222233


call plug#end()


